" GUI Settings {

    " GVIM- (here instead of .gvimrc)
    if has('gui_running')
        set guioptions-=T           " Remove the toolbar
        set lines=80                " 40 lines of text instead of 24
        set columns=120              " 85 columns to account for the line numbers
        set background=light
        if !exists("g:spf13_no_big_font")
            if LINUX() && has("gui_running")
                set guifont=DejaVu\ Sans\ Mono\ for\ Powerline\ 12,Andale\ Mono\ Regular\ 12,Menlo\ Regular\ 11,Consolas\ Regular\ 12,Courier\ New\ Regular\ 14
            elseif OSX() && has("gui_running")
                set guifont=DejaVu\ Sans\ Mono\ for\ Powerline:h14,Andale\ Mono\ Regular:h12,Menlo\ Regular:h11,Consolas\ Regular:h12,Courier\ New\ Regular:h14
            elseif WINDOWS() && has("gui_running")
                set guifont=Andale_Mono:h10,Menlo:h10,Consolas:h10,Courier_New:h10
            endif
        endif
    else
        if &term == 'xterm' || &term == 'screen'
            set t_Co=256            " Enable 256 colors to stop the CSApprox warning and make xterm vim shine
        endif
        "set term=builtin_ansi       " Make arrow and other keys work
    endif

    colorscheme solarized
" }

" Formatting {
    set wrap                      " Wrap long lines
    set lbr                       " Break lines on sensible characters"
" }

" Key Mapping {
let mapleader = ","
inoremap jj <ESC>       " Allow jj to exit insert mode (Like escape)
" }

" Plugin specific {
    " vim-notes
    :let g:notes_directories = ['~/Documents/Notes', '~/Dropbox/Notes']
    :let g:notes_suffix = '.md'
    " 
    " pandoc
    let g:pandoc#filetypes#handled = ["pandoc", "markdown"]
    let g:pandoc#filetypes#pandoc_markdown = 1
    let g:pandoc#formatting#mode = "h"
    if executable('pandoc')
        let g:pandoc#formatting#equalprg = "pandoc -t markdown --atx-headers"
    endif
" }
